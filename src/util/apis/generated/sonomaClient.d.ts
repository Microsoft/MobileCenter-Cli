/*
 * Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { ServiceClientOptions, RequestOptions, ServiceCallback } from 'ms-rest';
import * as operations from "./operations";

declare class SonomaClient {
    /**
     * @class
     * Initializes a new instance of the SonomaClient class.
     * @constructor
     *
     * @param {string} appName - The name of the application
     *
     * @param {string} ownerName - The name of the owner
     *
     * @param {number} buildId - The build ID
     *
     * @param {string} branch - The branch name
     *
     * @param {string} sha - The SHA hash
     *
     * @param {string} symbolUploadId - The ID of the symbol upload
     *
     * @param {string} symbolId - The ID of the symbol (uuid of the symbol)
     *
     * @param {string} crashGroupId - id of a specific group
     *
     * @param {string} crashId - id of a specific error
     *
     * @param {date} start - Start date time in data in ISO 8601 date time format
     *
     * @param {string} interval - Size of interval in ISO 8601 duration format. (PnYnMnDTnHnMnS|PnW|P<date>T<time>). The valid durations are 1 day (P1D), 1 week (P1W), and 30 days (P30D).
     *
     * @param {credentials} credentials - Subscription credentials which uniquely identify client subscription.
     *
     * @param {string} [baseUri] - The base URI of the service.
     *
     * @param {object} [options] - The parameter options
     *
     * @param {Array} [options.filters] - Filters to be added to the request pipeline
     *
     * @param {object} [options.requestOptions] - Options for the underlying request object
     * {@link https://github.com/request/request#requestoptions-callback Options doc}
     *
     * @param {boolean} [options.noRetryPolicy] - If set to true, turn off default retry policy
     *
     * @param {string} [options.form] - The selected form of the object. Possible values include: 'lite', 'full'
     *
     * @param {string} [options.appVersion] - version
     *
     * @param {date} [options.dateFrom] - 
     *
     * @param {date} [options.dateTo] - 
     *
     * @param {date} [options.lastOccurrenceFrom] - Earliest date when the last time a crash occured in a error group
     *
     * @param {date} [options.lastOccurrenceTo] - Latest date when the last time a crash occured in a error group
     *
     * @param {string} [options.errorType] - Possible values include: 'something', 'else'
     *
     * @param {string} [options.groupType] - Possible values include: 'GroupType1', 'GroupType2'
     *
     * @param {string} [options.groupStatus] - Possible values include: 'Open', 'Closed', 'Ignored'
     *
     * @param {boolean} [options.includeReport] - true if the error should include the raw error report. Default is false
     *
     * @param {boolean} [options.includeLog] - true if the error should include the custom log report. Default is false
     *
     * @param {string} [options.groupTextSearch] - A freetext search that matches in error, error types, error stack_traces and error user
     *
     * @param {date} [options.end] - Last date time in data in ISO 8601 date time format.
     *
     * @param {array} [options.versions] - 
     *
     * @param {number} [options.count] - The number of results to return
     *
     * @param {number} [options.top] - The maximum number of results to return.
     *
     * @param {number} [options.skip] - The offset (starting at 0) of the first result to return. This parameter along with limit is used to perform pagination.
     *
     * @param {string} [options.filter] - A filter as specified in https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering.
     *
     * @param {string} [options.inlinecount] - Controls whether or not to include a count of all the items accross all pages. Possible values include: 'allpages', 'none'
     *
     */
    constructor(appName: string, ownerName: string, buildId: number, branch: string, sha: string, symbolUploadId: string, symbolId: string, crashGroupId: string, crashId: string, start: Date, interval: string, credentials: ServiceClientCredentials, baseUri: string, options: ServiceClientOptions);

    appName: string;

    ownerName: string;

    buildId: number;

    branch: string;

    sha: string;

    form: string;

    symbolUploadId: string;

    symbolId: string;

    crashGroupId: string;

    crashId: string;

    appVersion: string;

    dateFrom: Date;

    dateTo: Date;

    lastOccurrenceFrom: Date;

    lastOccurrenceTo: Date;

    errorType: string;

    groupType: string;

    groupStatus: string;

    includeReport: boolean;

    includeLog: boolean;

    groupTextSearch: string;

    start: Date;

    end: Date;

    interval: string;

    versions: string[];

    count: number;

    top: number;

    skip: number;

    filter: string;

    inlinecount: string;

    credentials: ServiceClientCredentials;

    // Operation groups
    invitations: operations.Invitations;
    users: operations.Users;
    xcodeVersions: operations.XcodeVersions;
    versionsOperations: operations.VersionsOperations;
    apps: operations.Apps;
    symbols: operations.Symbols;
    symbolUploads: operations.SymbolUploads;
    symbolUpLoadsOperations: operations.SymbolUpLoadsOperations;
    symbolUploadOperations: operations.SymbolUploadOperations;
    repositories: operations.Repositories;
    packages: operations.Packages;
    packageModel: operations.PackageModel;
    packageUpload: operations.PackageUpload;
    crashOperations: operations.CrashOperations;
    commits: operations.Commits;
    builds: operations.Builds;
    branches: operations.Branches;
    sessions: operations.Sessions;
    devices: operations.Devices;
    available: operations.Available;
    apiTokens: operations.ApiTokens;
    }

export = SonomaClient;
